# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name wordle-api.karabay.co;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS + HTTP/2 API server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name wordle-api.karabay.co;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/wordle-api.karabay.co/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wordle-api.karabay.co/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy no-referrer;
    add_header Content-Security-Policy "default-src 'none';";

    # Access and error log
    access_log /var/log/nginx/api-access.log;
    error_log /var/log/nginx/api-error.log;

    location / {
        # JSON olmayan istekleri engelle
        if ($http_accept !~* "application/json") {
            return 406;
        }

        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Content-Type application/json;
    }
}