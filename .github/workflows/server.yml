name: Server CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'
      - 'docker-compose.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'
      - 'docker-compose.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wordle_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Install dependencies
        working-directory: ./server
        run: go mod download

      - name: Run migrations
        working-directory: ./server
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
          ./migrate -path internal/infrastructure/persistence/db/pgsql/migrations -database "postgres://postgres:postgres@localhost:5432/wordle_test?sslmode=disable" up

      - name: Run tests
        working-directory: ./server
        run: go test -v ./...
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wordle_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: server/go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: server
          args: --timeout=5m

  build:
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wordle-server:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wordle-server:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wordle-server:buildcache,mode=max 